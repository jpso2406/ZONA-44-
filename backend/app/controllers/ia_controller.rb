
class IaController < ApplicationController
  skip_before_action :authenticate_user!, raise: false

  def consultar
    # Obtener los productos de la base de datos

    # Mejorar la presentaci√≥n de los productos con emojis y formato
    productos = Producto.all.map do |p|
      grupo = p.grupo&.nombre || "Sin grupo"
      precio = p.precio.to_i
      emoji = case grupo.downcase
        when /hamburguesa/ then "üçî"
        when /perro/ then "üå≠"
        when /salchipapa/ then "üçü"
        when /bebida/ then "ü•§"
        when /asado/ then "ü•©"
        when /sandwich/ then "ü•™"
        when /gourmet/ then "üçΩÔ∏è"
        when /desgranado/ then "üåΩ"
        when /picada/ then "üç¢"
        when /infantil/ then "üßí"
        else "üçΩÔ∏è"
      end
      "#{emoji} #{p.name} (#{grupo})\n   üí≤#{precio} - #{p.descripcion}"
    end

    client = OpenAI::Client.new(access_token: ENV["OPENAI_API_KEY"])

    prompt = <<~PROMPT
      Eres un asistente experto en an√°lisis de productos de comida r√°pida.
      A continuaci√≥n tienes una lista de productos disponibles en la base de datos:
      #{productos.to_json}

      Bas√°ndote en esta informaci√≥n, responde a la siguiente pregunta del usuario:
      "#{params[:pregunta]}"
    PROMPT

    begin
      response = client.chat(
        parameters: {
          model: "gpt-4o-mini",
          messages: [
            { role: "system", content: "Eres un asistente √∫til y experto en an√°lisis de productos gastron√≥micos." },
            { role: "user", content: prompt }
          ]
        }
      )
      @respuesta_ia = response.dig("choices", 0, "message", "content")
      Rails.logger.info "Respuesta IA: #{@respuesta_ia.inspect}"
      if @respuesta_ia.blank?
        @respuesta_ia = "No se pudo obtener una respuesta de la IA. Por favor, intenta nuevamente o revisa la configuraci√≥n de la API."
      end
    rescue Faraday::TooManyRequestsError
      @respuesta_ia = "El asistente virtual est√° recibiendo muchas consultas en este momento. Por favor, intenta de nuevo en unos minutos. üôèü§ñ"
    rescue => e
      @respuesta_ia = "Ocurri√≥ un error inesperado al consultar la IA. Intenta m√°s tarde."
      Rails.logger.error "Error IA: #{e.class} - #{e.message}"
    end
    render :reporte
  end
end
