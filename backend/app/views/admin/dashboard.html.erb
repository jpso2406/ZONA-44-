<nav class="navbar navbar-dark bg-dark mb-4">
  <div class="container-fluid">
    <span class="navbar-brand mb-0 h1">Zona Admin</span>
    <% if admin_signed_in? %>
      <span class="text-white">Bienvenido, <%= current_admin.email %></span>
      <%= link_to "Cerrar sesión", destroy_admin_session_path, method: :delete, data: { turbo: false, confirm: "¿Deseas cerrar sesión?" }, class: "btn btn-danger ms-3" %>
    <% end %>
  </div>
</nav>
<div class="container-fluid">
  <div class="row">
    <!-- Aside lateral -->
    <aside class="col-md-2 bg-primary text-white min-vh-100 p-0">
      <div class="d-flex flex-column align-items-start p-3">
        <h3 class="mb-4">Panel Admin</h3>
        <ul class="nav nav-pills flex-column w-100" id="admin-menu">
          <li class="nav-item mb-2">
            <a class="nav-link active text-white" id="grupos-tab" href="#" onclick="showSection('grupos')">
              <i class="bi bi-folder"></i> Grupos
            </a>
          </li>
          <li class="nav-item mb-2">
            <a class="nav-link text-white" id="productos-tab" href="#" onclick="showSection('productos')">
              <i class="bi bi-box"></i> Productos
            </a>
          </li>
        </ul>
      </div>
    </aside>
    <!-- Sección principal -->
    <main class="col-md-10 p-4">
      <!-- Sección Grupos -->
      <section id="grupos-section">
        <div class="d-flex justify-content-between align-items-center mb-4">
          <h2>Grupos</h2>
          <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#newGrupoModal">Nuevo Grupo</button>
        </div>
        <div class="row" id="grupos-list">
          <%= render partial: 'admin/grupo_card', collection: @grupos, as: :grupo %>
        </div>
      </section>
      <!-- Sección Productos (oculta por defecto) -->
      <section id="productos-section" style="display: none;">
        <h2>Productos</h2>
        <!-- Aquí puedes agregar el código para mostrar productos en cartas -->
      </section>
    </main>
  </div>
</div>
<!-- Modal para editar grupo -->
<div class="modal fade" id="editGrupoModal" tabindex="-1" aria-labelledby="editGrupoModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editGrupoModalLabel">Editar Grupo</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body" id="editGrupoModalBody">
        <!-- Aquí se inyecta el contenido -->
      </div>
    </div>
  </div>
</div>

<!-- Modal para crear grupo -->
<div class="modal fade" id="newGrupoModal" tabindex="-1" aria-labelledby="newGrupoModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="newGrupoModalLabel">Nuevo Grupo</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body" id="newGrupoModalBody">
        <!-- Aquí se inyecta el formulario de nuevo grupo -->
      </div>
    </div>
  </div>
</div>


<script>

    function inicializarBotonesEditar() {
    document.querySelectorAll(".editar-grupo").forEach((btn) => {
      btn.addEventListener("click", function (e) {
        e.preventDefault();
        const grupoId = this.dataset.grupoId;

        fetch(`/grupos/${grupoId}/edit`, {
          headers: { Accept: "text/html" }
        })
          .then((res) => res.text())
          .then((html) => {
            document.getElementById("editGrupoModalBody").innerHTML = html;
            const modal = new bootstrap.Modal(document.getElementById("editGrupoModal"));
            modal.show();

            const form = document.querySelector("#editGrupoModalBody form");
            if (form) {
              form.addEventListener("submit", function (e) {
                e.preventDefault();
                const formData = new FormData(form);

                fetch(form.action, {
                  method: "POST",
                  headers: { Accept: "text/html" },
                  body: formData
                })
                  .then((res) => {
                    if (res.ok) {
                      modal.hide();
                      location.reload();
                    } else {
                      return res.text().then((html) => {
                        document.getElementById("editGrupoModalBody").innerHTML = html;
                      });
                    }
                  });
              });
            }
          });
      });
    });
  }
  document.addEventListener("DOMContentLoaded", function () {
    inicializarBotonesEditar(); 
    document.querySelectorAll(".editar-grupo").forEach((btn) => {
      btn.addEventListener("click", function (e) {
        e.preventDefault();
        const grupoId = this.dataset.grupoId;

        fetch(`/grupos/${grupoId}/edit`, {
          headers: { Accept: "text/html" }
        })
          .then((res) => res.text())
          .then((html) => {
            document.getElementById("editGrupoModalBody").innerHTML = html;
            const modal = new bootstrap.Modal(document.getElementById("editGrupoModal"));
            modal.show();

            const form = document.querySelector("#editGrupoModalBody form");
            if (form) {
              form.addEventListener("submit", function (e) {
                e.preventDefault();
                const formData = new FormData(form);

                fetch(form.action, {
                  method: "POST",
                  headers: { Accept: "text/html" },
                  body: formData
                })
                  .then((res) => {
                    if (res.ok) {
                      modal.hide();
                      location.reload();
                    } else {
                      return res.text().then((html) => {
                        document.getElementById("editGrupoModalBody").innerHTML = html;
                      });
                    }
                  });
              });
            }
          });
      });
    });
  });

  document.querySelector('[data-bs-target="#newGrupoModal"]').addEventListener('click', function () {
    fetch('/grupos/new', {
      headers: { Accept: "text/html" }
    })
      .then((res) => res.text())
      .then((html) => {
        document.getElementById("newGrupoModalBody").innerHTML = html;

        const form = document.querySelector("#newGrupoModalBody form");

        if (form) {
          form.addEventListener("submit", function (e) {
            e.preventDefault();
            const formData = new FormData(form);

            fetch(form.action, {
              method: "POST",
              headers: { Accept: "text/html" },
              body: formData
            })
              .then((res) => {
                if (res.ok) {
                  res.text().then((html) => {
                    // Agrega la nueva tarjeta al contenedor
                    document.querySelector("#grupos-list").insertAdjacentHTML("beforeend", html);
                    inicializarBotonesEditar(); // Reasigna los botones de editar

                    // Cierra el modal correctamente
                    const modalElement = document.getElementById("newGrupoModal");
                    const modal = new bootstrap.Modal(modalElement);
                    modal.hide();

                    // Elimina el overlay (backdrop) si queda colgado
                    document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
                    document.body.classList.remove('modal-open');
                    document.body.style = '';

                    // Limpia el formulario
                    form.reset();
                  });
                } else {
                  res.text().then((html) => {
                    document.getElementById("newGrupoModalBody").innerHTML = html;
                  });
                }
              });
          });
        }
    });
  });

</script>
